#!/snap/bin/groovy
import groovy.xml.XmlSlurper
def addElement(n,writer,maxOccurs=''){
    
def mySet=[]
   ifChildren=ifAttr=!n.children().isEmpty()
   ifAttr=!n.attributes().isEmpty()
   
    
    if (ifChildren|| ifAttr){
        writer.append("<xs:element ${maxOccurs} name=\"${n.name()}\" >")
        writer.append("<xs:complexType>")

       
        if (ifChildren){
         writer.append("<xs:sequence>")
         n.children().each{
            currentNode-> 
            def nodeName= currentNode.name()
            def nodeChildrenCount=currentNode.children().size().toString()    
            countOfCurrentNode= n."$nodeName".size().toInteger()
         if (countOfCurrentNode >1){
            maxOccurs='maxOccurs="unbounded"'  
         }
         else{
            maxOccurs=''    
         }
         if(!mySet.contains(nodeName)){
             mySet.add(nodeName)
             if(nodeChildrenCount!='0'){
                 addElement(currentNode,writer,maxOccurs)
             }
             else if(!currentNode.attributes().isEmpty()) {
                writer.append("<xs:element ${maxOccurs} name=\"${currentNode.name()}\" >")
                writer.append("<xs:complexType>")
                writer.append("<xs:simpleContent>")
                writer.append("<xs:extension base=\"xs:string\">")
                currentNode.attributes().each{attribute ->
                
                writer.append("<xs:attribute name=\"${attribute.toString().split('=')[0]}\" type=\"xs:string\" />")
                }
            writer.append("</xs:extension>")
            writer.append("</xs:simpleContent>")
            writer.append("</xs:complexType>")
            writer.append("</xs:element>")
             }
            else{
                writer.append("<xs:element ${maxOccurs} name=\"${nodeName}\" type=\"xs:string\" />")
            }
         }
          
     }
        }
     writer.append("</xs:sequence>")
      if(!n.attributes().isEmpty()){

    
      n.attributes().each{attribute ->
      println attribute
       writer.append("<xs:attribute name=\"${attribute.toString().split('=')[0]}\" type=\"xs:string\" />")
    }
    
 }
   writer.append("</xs:complexType>")
   writer.append("</xs:element>")
        }
        
        
    }
    

    

def main(){
    def writer = new StringWriter()
    def xml = new XmlSlurper().parse('Payload.xml')
    writer.append('<?xml version="1.0" encoding="utf-8"?>')
    writer.append('<xs:schema xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">')

   addElement(xml,writer)
   
   writer.append('</xs:schema>')

  println writer
}
main()
